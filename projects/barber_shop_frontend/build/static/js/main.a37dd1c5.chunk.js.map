{"version":3,"sources":["components/Login.js","components/AdminLogin.js","components/BarberSignUp.js","components/BarberScheduleInit.js","pages/HomePage.js","pages/BarberProfilePage.js","pages/AdminPage.js","pages/SearchResult.js","components/Navbar.js","App.js","serviceWorker.js","index.js","media/Bar.png","media/LeftMain.png","media/rightMain.png"],"names":["Login","useState","email","setEmail","password","setPassword","userType","setUserType","history","useHistory","loginForm","event","a","preventDefault","console","log","axios","post","then","result","data","true","push","alert","catch","error","Form","onSubmit","Group","onChange","target","value","controlId","Label","Control","type","placeholder","Text","className","as","Button","variant","AdminLogin","id","setId","BarberSignUp","handleBarberClose","handleBarberScheduleShow","firstName","setFirstName","lastName","setLastName","setError","addBarber","e","style","color","Row","Col","md","ProgressBar","now","BarberScheduleInit","barberType","setBarberType","days","setDays","startTime","setStartTime","endTime","setEndTime","timePeriod","setTimePeriod","locationId","setLocationId","showLocation","setShowLocation","locations","setLocations","locationOptions","map","loc","Address","location","useEffect","get","addSchedule","time","concat","setTime","Promise","resolve","reject","Check","inline","label","includes","index","indexOf","newDay","splice","addDays","start","end","step","HomePage","loginShow","setLoginShow","barberScheduleShow","setBarberScheduleShow","barberShow","setBarberShow","userShow","setUserShow","Container","Image","src","rightMain","bar","leftMain","onPress","Modal","size","show","onHide","Header","closeButton","Title","Body","BarberProfilePage","info","setInfo","undefined","CardGroup","Card","times","rangeMile","onClick","deleteAccount","handleLogout","updateSchedule","AdminPage","SearchResult","searchResult","setSearchResult","useParams","name","searchValue","setSearchFound","CardColumns","charAt","toUpperCase","slice","Navbare","search","setsearch","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","FormControl","App","path","component","exact","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.a37dd1c5.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {Button, Form} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n    var [email, setEmail] = useState(\"email\");\r\n    var [password, setPassword] = useState(\"password\");\r\n    var [userType, setUserType] = useState(\"storeworker\")\r\n\r\n    let history = useHistory();\r\n\r\n    var loginForm = async (event) => {\r\n        event.preventDefault();\r\n        console.log(\"here\")\r\n        axios.post('/api/login',{email, password, userType}).then((result) => {\r\n           console.log(result)\r\n            if(result.data.true){\r\n               history.push('/barber-profile')\r\n           }else{\r\n               alert(\"Wrong Password\")\r\n           }\r\n        }).catch((error) =>{\r\n            console.log(error)\r\n        })\r\n\r\n    }\r\n    return(\r\n        <>\r\n            <div>\r\n            <Form onSubmit = {(event) => {loginForm(event)}}>\r\n            <Form.Group onChange={(event) => {setEmail(event.target.value)}} controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n            <Form.Text className=\"text-muted\">\r\n                     We'll never share your email with anyone else.\r\n            </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group onChange={(event) => {setPassword(event.target.value)}} controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control type=\"password\" placeholder=\"Password\" />\r\n            </Form.Group>\r\n            <Form.Group>\r\n            <Form.Label>User Type</Form.Label>\r\n            <Form.Control onChange={(event) => {setUserType(event.target.value)}} type=\"userType\" as=\"select\">\r\n            <option value=\"storeworker\">Store Worker</option>\r\n            <option value=\"travelworker\">Travel Worker</option>\r\n            </Form.Control>\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                 Submit\r\n            </Button>\r\n            </Form>\r\n            </div>\r\n        </>\r\n\r\n    )}\r\n\r\n    export default Login;","import React, {useState, useEffect} from 'react';\r\nimport {Button, Form} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst AdminLogin = () => {\r\n    var [id, setId] = useState(\"id\");\r\n    var [password, setPassword] = useState(\"password\");\r\n    var [userType, setUserType] = useState(\"storeworker\")\r\n\r\n    let history = useHistory();\r\n\r\n    var loginForm = async (event) => {\r\n        event.preventDefault();\r\n        if(id === \"admin\" && password === \"barber\"){\r\n            console.log(\"Logged In\")\r\n            history.push('/admin')\r\n        }else{\r\n            alert(\"Wrong User/Pass\")\r\n        }\r\n\r\n    }\r\n    return(\r\n        <>\r\n            <div>\r\n            <Form onSubmit = {(event) => {loginForm(event)}}>\r\n            <Form.Group onChange={(event) => {setId(event.target.value)}} controlId=\"formBasicEmail\">\r\n            <Form.Label>Id</Form.Label>\r\n            <Form.Control type=\"id\" placeholder=\"Enter Id\" />\r\n            <Form.Text className=\"text-muted\">\r\n                     We'll never share your email with anyone else.\r\n            </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group onChange={(event) => {setPassword(event.target.value)}} controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control type=\"password\" placeholder=\"Password\" />\r\n            </Form.Group>\r\n           \r\n            <Button variant=\"primary\" type=\"submit\">\r\n                 Submit\r\n            </Button>\r\n            </Form>\r\n            </div>\r\n        </>\r\n\r\n    )}\r\n\r\n    export default AdminLogin;","import React, {useState, useEffect} from 'react';\r\nimport {Button, Form, Col,ProgressBar } from 'react-bootstrap';\r\nimport axios from \"axios\";\r\n\r\n\r\nconst BarberSignUp = ({handleBarberClose,handleBarberScheduleShow}) => {\r\n\r\n    const [firstName, setFirstName] = useState(\"firstName\");\r\n    const [lastName, setLastName] = useState(\"lastName\");\r\n    const [email, setEmail] = useState(\"email\");\r\n    const [password, setPassword] = useState(\"password\");\r\n    const [error, setError] = useState(false)\r\n    \r\n    const addBarber = async (event) => {\r\n        event.preventDefault();\r\n        console.log(\"here\")\r\n        axios.post('/api/barber-signup',{firstName,lastName,email,password}).then((result) => {\r\n            if(result.data.error){\r\n                setError(true)\r\n            }else{\r\n                handleBarberClose()\r\n                handleBarberScheduleShow()\r\n            }\r\n        }).catch((e) =>{\r\n            console.log(e)\r\n        })\r\n    }\r\n\r\n    return(\r\n    <>   \r\n    <div>\r\n    <Form onSubmit = {(event) => addBarber(event) }>\r\n        {error ? <h6 style={{color: \"red\"}}>Email Already Taken!!</h6> : ''}\r\n        <Form.Row>\r\n        <Form.Group onChange={(event) => {setFirstName(event.target.value)}} as={Col} md=\"4\">\r\n        <Form.Label>First Name</Form.Label>\r\n        <Form.Control type=\"firstName\" placeholder=\"First Name\" />\r\n        </Form.Group>\r\n        <Form.Group onChange={(event) => {setLastName(event.target.value)}} as={Col} md=\"4\">\r\n        <Form.Label>Last Name</Form.Label>\r\n        <Form.Control type=\"lastName\" placeholder=\"Last Name\" />\r\n        </Form.Group>\r\n        \r\n        </Form.Row>\r\n        <Form.Row>\r\n        <Form.Group  onChange={(event) => {setEmail(event.target.value)}} as={Col} md=\"4\" controlId=\"formGridEmail\">\r\n        <Form.Label>Email address</Form.Label>\r\n        <Form.Control type=\"email\" placeholder=\"jack@unionBarber.com\" />\r\n        <Form.Text className=\"text-muted\">\r\n            We'll never share your email with anyone else.\r\n        </Form.Text>\r\n        </Form.Group>\r\n        <Form.Group  onChange={(event) => {setPassword(event.target.value)}} as={Col} md=\"4\" controlId=\"formGridPassword\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control type=\"password\" placeholder=\"Password\" />\r\n        </Form.Group>\r\n        </Form.Row>\r\n        \r\n        <ProgressBar now={50} />\r\n\r\n        <br/>\r\n        <div>\r\n            \r\n        <Button variant=\"primary\" type=\"submit\">\r\n        Submit\r\n        </Button>\r\n        </div>\r\n    </Form>\r\n\r\n    </div>\r\n    \r\n    </>\r\n)}\r\n\r\nexport default BarberSignUp;","import React, {useState, useEffect} from 'react';\r\nimport {Button, Form, Col,ProgressBar } from 'react-bootstrap';\r\nimport axios from \"axios\";\r\nimport TimePicker from 'react-bootstrap-time-picker';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst BarberScheduleInit = () => {\r\n\r\n    const [barberType, setBarberType] = useState(\"type\");\r\n    const [days, setDays] = useState([]);\r\n    const [startTime, setStartTime] = useState(25200);\r\n    const [endTime, setEndTime] = useState(79200);\r\n    const [timePeriod, setTimePeriod] = useState('');\r\n\r\n    const [locationId, setLocationId] = useState(1);\r\n\r\n    const [showLocation, setShowLocation] = useState(false);\r\n\r\n    const [locations, setLocations] = useState([]);\r\n\r\n    \r\n    let history = useHistory();\r\n\r\n    const locationOptions = locations.map((loc)=>\r\n    <option  value={loc.id}>{loc.Address}</option>\r\n)\r\n\r\n\r\n    const location = <>  <Form.Group onChange={(event) => {console.log(event.target.value); setLocationId(event.target.value)}}>\r\n    <Form.Label>Choose Location</Form.Label>\r\n    <Form.Control type=\"userType\" as=\"select\">\r\n    {locationOptions}\r\n    </Form.Control>\r\n    </Form.Group></>\r\n\r\n   \r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        console.log(barberType)\r\n        if(barberType === \"storeworker\"){\r\n            setShowLocation(true)\r\n            axios.get('/api/store-locations').then((result)=>{\r\n                setLocations(result.data)\r\n            })\r\n        }else{\r\n            setShowLocation(false)\r\n        }\r\n    },[barberType])\r\n\r\n\r\n    \r\n    const addSchedule = async (event) => {\r\n        event.preventDefault();\r\n        console.log(barberType, days, timePeriod)\r\n        let time = ''\r\n        time = time.concat(startTime/3600,'-',endTime/3600)\r\n            \r\n        axios.post('/api/barber-schedule-init',{barberType,days,time,locationId}).then((result) => {\r\n            history.push('/barber-profile')\r\n\r\n        }).catch((e) =>{\r\n            console.log(e)\r\n        })\r\n\r\n    }\r\n\r\n    const addDays = (event) => {\r\n        if(!days.includes(event.target.value)){\r\n            let newDay = days\r\n            newDay.push(event.target.value)\r\n            setDays(newDay)\r\n        }else{\r\n            let index = days.indexOf(event.target.value);\r\n            let newDay = days.splice(index,1);\r\n            setDays(newDay)\r\n        }}\r\n\r\n    const setTime = (event) => {\r\n        event.preventDefault();\r\n        console.log(startTime)\r\n        console.log(endTime)\r\n        return new Promise((resolve,reject) =>{\r\n            let time = ''\r\n            time = time.concat(startTime/3600,'-',endTime/3600)\r\n            console.log(time)\r\n            setTimePeriod(time)\r\n            resolve(\"Done\")\r\n        })\r\n        \r\n    }\r\n        \r\n\r\n    return(\r\n    <> \r\n    <div>\r\n    <Form onSubmit = {async(event) => {await setTime(event) ;console.log(timePeriod);addSchedule(event)} }>\r\n        <Form.Group onChange={(event) => {setBarberType(event.target.value)}}>\r\n            <Form.Label style={{color: \"red\"}}>What Type of Service do you like to provide ? Choose One Only! <br/></Form.Label>\r\n            \r\n            <Form.Check inline label=\"Store Worker\" value=\"storeworker\" />\r\n            \r\n            <Form.Check inline label=\"Travel Worker\" value=\"travelworker\" />\r\n            \r\n        </Form.Group>\r\n        {showLocation ? location : ''}\r\n        <Form.Row>\r\n        <Form.Group  onChange={(event) => {addDays(event)}} \r\n            as={Col} md=\"4\" controlId=\"formGridEmail\">\r\n        <Form.Label>What Days can you Work ?</Form.Label>\r\n        <Form.Check label=\"Monday\" value=\"Monday\" />\r\n        <Form.Check label=\"Tuesday\" value=\"Tuesday\" />\r\n        <Form.Check label=\"Wednesday\" value=\"Wednesday\" />\r\n        <Form.Check label=\"Thursday\" value=\"Thursday\" />\r\n        <Form.Check label=\"Friday\" value=\"Friday\" />\r\n        <Form.Check label=\"Saturday\" value=\"Saturday\" />\r\n        <Form.Check label=\"Sunday\" value=\"Sunday\" />\r\n        </Form.Group>\r\n        <Form.Group   as={Col} md=\"4\" controlId=\"formGridPassword\">\r\n        <Form.Label>What Time can you Work ? <br/> NOTE: The Chosen time would apply for all the selected dates <br/> (Please Make Sure of that) </Form.Label>\r\n        Starting Time: \r\n        <TimePicker onChange={(event) => {console.log(event);setStartTime(event);console.log(startTime)}} start=\"07:00\" end=\"22:00\" step={60} value={startTime} />\r\n        Ending Time:\r\n        <TimePicker onChange={(event) => {console.log(startTime);console.log(event);setEndTime(event);console.log(endTime)}} start=\"07:00\" end=\"22:00\" step={60} value={endTime} />\r\n\r\n        </Form.Group>\r\n        </Form.Row>\r\n        \r\n        <ProgressBar now={90} />\r\n\r\n        <br/>\r\n        <div>\r\n            \r\n        <Button variant=\"primary\" type=\"submit\">\r\n        Submit\r\n        </Button>\r\n        </div>\r\n    </Form>\r\n\r\n    </div>\r\n    \r\n    </>\r\n)}\r\n\r\nexport default BarberScheduleInit;","import React, {useState, useEffect} from 'react';\r\nimport {AwesomeButton } from 'react-awesome-button';\r\nimport \"react-awesome-button/dist/styles.css\";\r\nimport {Modal, Image, Container, Row, Col} from 'react-bootstrap';\r\nimport Login from '../components/Login';\r\nimport AdminLogin from '../components/AdminLogin'\r\nimport BarberSignUp from '../components/BarberSignUp';\r\nimport BarberScheduleInit from '../components/BarberScheduleInit';\r\nimport bar from '../media/Bar.png';\r\nimport leftMain from '../media/LeftMain.png';\r\nimport rightMain from '../media/rightMain.png';\r\nconst HomePage = () => {\r\n    const [loginShow, setLoginShow] = useState(false);\r\n    const [barberScheduleShow, setBarberScheduleShow] = useState(false);\r\n    const [barberShow, setBarberShow] = useState(false);\r\n    const [userShow, setUserShow] = useState(false);\r\n    \r\n\r\n    const handleLoginClose = () => setLoginShow(false);\r\n    const handleLoginShow = () => setLoginShow(true);\r\n\r\n    \r\n    const handleBarberClose = () => setBarberShow(false);\r\n    const handleBarberShow = () => setBarberShow(true);\r\n\r\n    const handleBarberScheduleClose = () => setBarberScheduleShow(false);\r\n    const handleBarberScheduleShow = () => setBarberScheduleShow(true);\r\n\r\n\r\n    \r\n    const handleUserClose = () => setUserShow(false);\r\n    const handleUserShow = () => setUserShow(true);\r\n\r\n    \r\n    return(\r\n<>   \r\n    <div className=\"center\">\r\n    <Container>\r\n        <Row className=\"justify-content-md-center\">\r\n        <Col md=\"auto\"><Image src={rightMain}/></Col>\r\n        <Col md=\"auto\"><Image src={bar}/></Col>\r\n        <Col md=\"auto\"><Image src={leftMain}/></Col>\r\n            \r\n        </Row>\r\n        <Row>\r\n            <Col ><AwesomeButton onPress={handleBarberShow} type=\"primary\">Barber Sign Up</AwesomeButton></Col>\r\n            <Col ><AwesomeButton onPress={handleUserShow} type=\"primary\">Admin Login</AwesomeButton> </Col>\r\n            <Col ><AwesomeButton onPress={handleLoginShow} type=\"primary\">Loggin All Users</AwesomeButton></Col>\r\n        </Row>\r\n    </Container> \r\n    \r\n    </div>\r\n    \r\n\r\n        \r\n        <Modal size=\"lg\" show={barberShow} onHide={handleBarberClose}>\r\n            <Modal.Header closeButton>\r\n            <Modal.Title>Barber Sign Up</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body><BarberSignUp handleBarberScheduleShow={handleBarberScheduleShow} handleBarberClose={handleBarberClose}/></Modal.Body>\r\n        </Modal>\r\n\r\n        <Modal size=\"lg\" show={barberScheduleShow} onHide={handleBarberScheduleClose}>\r\n            <Modal.Header closeButton>\r\n            <Modal.Title>Barber Schedule <br/> <h6 style={{color: \"red\"}}>Everything is Required!! Please Fill Out Carefully</h6></Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body><BarberScheduleInit/></Modal.Body>\r\n        </Modal>\r\n\r\n        \r\n        <Modal show={userShow} onHide={handleUserClose}>\r\n            <Modal.Header closeButton>\r\n            <Modal.Title>Admin Login</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body><AdminLogin/></Modal.Body>\r\n        </Modal>\r\n\r\n        \r\n        <Modal show={loginShow} onHide={handleLoginClose}>\r\n            <Modal.Header closeButton>\r\n            <Modal.Title>Barber Login</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body><Login/></Modal.Body>\r\n        </Modal>\r\n</>\r\n)}\r\n//<AwesomeButton type=\"primary\">Loggin All Users</AwesomeButton>\r\n\r\nexport default HomePage;","import React, {useState, useEffect} from 'react';\r\nimport axios from \"axios\";\r\nimport {CardGroup, Card,Button, Modal, Form, Col} from 'react-bootstrap'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TimePicker from 'react-bootstrap-time-picker';\r\n\r\n\r\nconst BarberProfilePage = () => {\r\n    const [info, setInfo] = useState({})\r\n    const [email, setEmail] = useState();\r\n    const [loginShow, setLoginShow] = useState(false);\r\n\r\n    const [days, setDays] = useState([]);\r\n    const [startTime, setStartTime] = useState(25200);\r\n    const [endTime, setEndTime] = useState(79200);\r\n\r\n    const [timePeriod, setTimePeriod] = useState(0);   \r\n    let history = useHistory();\r\n\r\n\r\n    const handleLoginClose = () => setLoginShow(false);\r\n    const handleLoginShow = () => setLoginShow(true);\r\n\r\n    useEffect(()=>{\r\n        axios.get('/api/barber-profile').then((result)=>{\r\n            if(result.data[0] === undefined){\r\n              alert(\"Wrong Type of User Selected or You do Not have the Permission to be here!!!\")\r\n              history.push('/')\r\n            }else{\r\n            setInfo(result.data[0])\r\n            setEmail(result.data[0].email)\r\n        }})\r\n    },[])\r\n\r\n    const updateSchedule = (event) => {\r\n        let time = ''\r\n        time = time.concat(startTime/3600,'-',endTime/3600)\r\n        axios.post('/api/update-schedule',{email,days,time}).then((result)=>{\r\n         \r\n          \r\n      })\r\n    }\r\n\r\n    const handleLogout = (event) => {\r\n      event.preventDefault();\r\n      axios.get('/api/logout').then((result)=>{\r\n        alert(\"Logout\")\r\n        history.push('/')\r\n      })\r\n    }\r\n\r\n\r\n\r\n    \r\n    const addDays = (event) => {\r\n        if(!days.includes(event.target.value)){\r\n            let newDay = days\r\n            newDay.push(event.target.value)\r\n            setDays(newDay)\r\n        }else{\r\n            let index = days.indexOf(event.target.value);\r\n            let newDay = days.splice(index,1);\r\n            setDays(newDay)\r\n        }}\r\n\r\n    const setTime = (event) => {\r\n        let time = ''\r\n        setTimePeriod(time.concat(startTime/3600,'-',endTime/3600))\r\n        console.log(endTime)\r\n        \r\n\r\n    }\r\n\r\n    const deleteAccount = (event) => {\r\n      event.preventDefault()\r\n      axios.post('/api/delete-account',{email}).then((result)=>{\r\n         alert(\"Account Deleted\")\r\n         history.push('/')\r\n          \r\n      })\r\n    }\r\n    return(\r\n    <>\r\n    <br/>\r\n    <br/>\r\n    <h1>Barber Profile Page</h1>\r\n    \r\n    <CardGroup className=\"center\">\r\n  <Card>\r\n    <Card.Body>\r\n      <Card.Title>Your Schedule</Card.Title>\r\n      <Card.Text>\r\n        Days Working: {info.days} <br/>\r\n        Time Working: {info.times}\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n  <Card>\r\n    \r\n    <Card.Body>\r\n      <Card.Title>Private Info</Card.Title>\r\n      <Card.Text>\r\n        Email: {info.email} <br/>\r\n        First Name: {info.firstName} <br/>\r\n        Last Name: {info.lastName} <br/>\r\n        Type of Worker: {info.locationId ? \"Store Worker\" : \"Travel Worker\"} <br/>\r\n        {info.locationId ? (\"Store Location: \" + info.Address) : \"Range Mile: \" + info.rangeMile }\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n        <Card>\r\n            <Card.Title>Edit Account</Card.Title>\r\n            <Card.Body>\r\n            <Button onClick={(event) => deleteAccount(event)}>Delete Account</Button> <br/>\r\n            <Button onClick={handleLoginShow}>Change Schedule</Button>\r\n            <Button onClick={(event)=>handleLogout(event)}>Logout</Button>\r\n        </Card.Body>\r\n        </Card>\r\n  \r\n</CardGroup>\r\n\r\n<Modal show={loginShow} onHide={handleLoginClose}>\r\n            <Modal.Header closeButton>\r\n            <Modal.Title>Change Schedule</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body><Form onSubmit={(event)=>{alert(\"Schedule Updated\");updateSchedule(event)}}><Form.Row><Form.Group  onChange={(event) => {addDays(event)}} \r\n            as={Col} md=\"4\" controlId=\"formGridEmail\">\r\n        <Form.Label>What Days can you Work ?</Form.Label>\r\n        <Form.Check label=\"Monday\" value=\"Monday\" />\r\n        <Form.Check label=\"Tuesday\" value=\"Tuesday\" />\r\n        <Form.Check label=\"Wednesday\" value=\"Wednesday\" />\r\n        <Form.Check label=\"Thursday\" value=\"Thursday\" />\r\n        <Form.Check label=\"Friday\" value=\"Friday\" />\r\n        <Form.Check label=\"Saturday\" value=\"Saturday\" />\r\n        <Form.Check label=\"Sunday\" value=\"Sunday\" />\r\n        </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n        <Form.Group   as={Col} md=\"4\" controlId=\"formGridPassword\">\r\n        <Form.Label>What Time can you Work ? <br/> NOTE: The Chosen time would apply for all the selected dates <br/> (Please Make Sure of that) </Form.Label>\r\n        Starting Time: \r\n        <TimePicker onChange={(event) => {setStartTime(event)}} start=\"07:00\" end=\"22:00\" step={60} value={startTime} />\r\n        Ending Time:\r\n        <TimePicker onChange={(event) => {setEndTime(event);setTime(event)}} start=\"07:00\" end=\"22:00\" step={60} value={endTime} />\r\n\r\n        </Form.Group>\r\n        </Form.Row>\r\n        <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n        </Form></Modal.Body>\r\n        </Modal>\r\n  \r\n    </>\r\n)}\r\n\r\n\r\nexport default BarberProfilePage;","import React, {useState, useEffect} from 'react';\r\nimport axios from \"axios\";\r\nimport {CardGroup, Card,Button, Modal, Form, Col} from 'react-bootstrap'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TimePicker from 'react-bootstrap-time-picker';\r\n\r\n\r\nconst AdminPage = () => {\r\n    const [info, setInfo] = useState({})\r\n    const [email, setEmail] = useState();\r\n    const [loginShow, setLoginShow] = useState(false);\r\n\r\n    const [days, setDays] = useState([]);\r\n    const [startTime, setStartTime] = useState(25200);\r\n    const [endTime, setEndTime] = useState(79200);\r\n\r\n    const [timePeriod, setTimePeriod] = useState(0);   \r\n    let history = useHistory();\r\n\r\n\r\n    return(\r\n    <>\r\n    <br/><br/>\r\n    <h1>Admin Page</h1>\r\n    \r\n    <CardGroup className=\"center\">\r\n    <Card>Hello</Card>  \r\n    </CardGroup>\r\n  \r\n    </>\r\n)}\r\n\r\n\r\nexport default AdminPage;","import React, {useState, useEffect} from 'react';\r\nimport {CardColumns, Card,Button, Modal, Form, Col} from 'react-bootstrap'\r\nimport axios from 'axios';\r\nimport { useParams} from \"react-router-dom\";\r\nimport { Laptop, PersonFill, Calendar } from 'react-bootstrap-icons';\r\n\r\n\r\n\r\nconst SearchResult = () => {\r\n    const [ searchResult, setSearchResult] = useState([])\r\n    const [ searchValue, setSearchValue] = useState(useParams().name)\r\n    const [ searchFound, setSearchFound] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        axios.post('/api/search-result',{searchValue}).then((result) => {\r\n            console.log(result.data)\r\n            if(result.data[0] != undefined){\r\n                setSearchResult(result.data)\r\n                setSearchFound(true)\r\n            }else{\r\n                alert(\"Search Result Not Found!!!\")\r\n                \r\n            }\r\n            \r\n        })\r\n    },[])\r\n\r\n    return(\r\n        <>\r\n        <CardColumns>\r\n        {searchResult.map((info) => (\r\n            <Card ><Card.Body>\r\n            <Card.Title><PersonFill color=\"royalblue\" size={25} />\r\n                {info.firstName.charAt(0).toUpperCase() + info.firstName.slice(1)} {info.lastName.charAt(0).toUpperCase() + info.lastName.slice(1)}</Card.Title>\r\n            <Card.Text><Laptop color=\"royalblue\" size={25} />Contact Info:  {info.email}\r\n            <br/>\r\n            <Calendar color=\"royalblue\" size={25} />Schedule: <br/>\r\n            {info.days}\r\n            <br/>\r\n            {info.times}\r\n            </Card.Text></Card.Body></Card>\r\n))}\r\n        </CardColumns>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchResult;","import React, {useState, useEffect} from 'react';\r\nimport {Button, Form, Navbar, Nav, FormControl} from 'react-bootstrap';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst Navbare = () => {\r\n    const [search, setsearch] = useState('');\r\n    let history = useHistory();\r\n\r\n    const searching = (event) => {\r\n        history.push(`/search-result/${search}`)\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand href=\"/\">Search Barber</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n        <Nav.Link href=\"/\">About</Nav.Link>\r\n        </Nav>\r\n        <Form onChange={(event) => {setsearch(event.target.value)}} onSubmit={(event) => {searching(event)}} inline>\r\n        <FormControl type=\"text\" placeholder=\"Search First Name\" className=\"mr-sm-2\" />\r\n        <Button variant=\"outline-success\">Search</Button>\r\n        </Form>\r\n        </Navbar.Collapse>\r\n        </Navbar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbare;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n}from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport BarberSignUp from './components/BarberSignUp';\nimport BarberProfilePage from './pages/BarberProfilePage';\nimport AdminPage from './pages/AdminPage';\nimport SearchResult from './pages/SearchResult'\nimport './App.css';\nimport Navbar from './components/Navbar'\n\nfunction App() {\n  return (\n    <Router>\n        <Navbar/>\n        <div className=\"App center\">\n          <div id=\"page-body\">\n            <Switch>\n              <Route path=\"/\" component={HomePage} exact />\n              <Route path=\"/barber-signup\" component={BarberSignUp} />\n              <Route path=\"/admin\" component={AdminPage} />\n              <Route path=\"/search-result/:name\" exact component={SearchResult} />\n              <Route path=\"/barber-profile\" component={BarberProfilePage} />\n            </Switch>\n          </div>\n         \n       </div>\n  \n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Bar.86a8a2f0.png\";","module.exports = __webpack_public_path__ + \"static/media/LeftMain.44a964a4.png\";","module.exports = __webpack_public_path__ + \"static/media/rightMain.d06a6432.png\";"],"sourceRoot":""}